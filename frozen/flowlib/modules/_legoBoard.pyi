# make_stub_files: Tue 03 Sep 2019 at 17:05:43

from typing import Any, Dict, Optional, Sequence, Tuple, Union
Node = Any
def constrain(amt: Any, low: Any, high: Any) -> Any: ...
    #   0: return low
    # ? 0: return low
    #   1: return high
    # ? 1: return high
    #   2: return amt
    # ? 2: return amt
class NXP_Motor:
    def __init__(self, port: Any) -> None: ...
    def _available(self) -> None: ...
    def reset(self) -> None: ...
    def stop(self) -> None: ...
    def brake(self) -> None: ...
    def write(self, value: Any) -> None: ...
    def read(self) -> Any: ...
        #   0: return self.encoder_read()
        # ? 0: return self.encoder_read()
    def encoder_incr(self) -> Any: ...
        #   0: return incr_val
        # ? 0: return incr_val
    def set_pwm(self, pwm: Any) -> None: ...
    def encoder_read(self) -> Any: ...
        #   0: return self._encoder_read()-self.encode_zero
        # ? 0: return self._encoder_read()-self.encode_zero
    def encode_clear(self) -> None: ...
    def _encoder_read(self) -> Any: ...
        #   0: return tuple(ustruct.unpack('<l',buf))[0]
        # ? 0: return Tuple[ustruct.unpack(str, buf)][number]
    def set_speed(self, speed: Any) -> None: ...
    def set_angle_zero(self) -> None: ...
    def set_angle(self, angle: Any, max_pwm: Any=255) -> None: ...
    def update(self) -> None: ...
    def update_no_block(self) -> None: ...
    def test(self) -> None: ...
    def deinit(self) -> None: ...
class Lego_Motor:
    def __init__(self) -> None: ...
    def update_thread(self) -> None: ...
    def register(self, number: Any) -> Any: ...
        #   0: return self.motor[number]
        # ? 0: return self.motor[number]
    def unregistered(self, number: Any) -> bool: ...
class LegoBoard:
    def __init__(self) -> None: ...
    def deinit(self) -> None: ...
