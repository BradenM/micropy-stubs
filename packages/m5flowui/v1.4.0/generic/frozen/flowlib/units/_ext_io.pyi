# make_stub_files: Tue 03 Sep 2019 at 17:05:43

from typing import Any, Dict, Optional, Sequence, Tuple, Union
Node = Any
class Ext_io:
    def __init__(self, port: Any) -> None: ...
    def _available(self) -> None: ...
    def _get_mode(self) -> Any: ...
        #   0: return self.i2c.readfrom_mem(_ADDR,_CONFIG_REG,1)[0]
        # ? 0: return self.i2c.readfrom_mem(_ADDR, _CONFIG_REG, number)[number]
    def setPortMode(self, mode: Any) -> None: ...
    def setPinMode(self, pin: machine.Pin.pin, mode: Any) -> None: ...
    def digitReadPort(self) -> Any: ...
        #   0: return self.i2c.readfrom_mem(_ADDR,_INPUT_REG,1)[0]
        # ? 0: return self.i2c.readfrom_mem(_ADDR, _INPUT_REG, number)[number]
    def digitWritePort(self, state: Any) -> None: ...
    def digitRead(self, pin: machine.Pin.pin) -> Any: ...
        #   0: return self.i2c.readfrom_mem(_ADDR,_OUTPUT_REG,1)[0]>>pin&1
        # ? 0: return self.i2c.readfrom_mem(_ADDR, _OUTPUT_REG, number)[number]>>machine.Pin.pin&number
        #   1: return self.digitReadPort()>>pin&1
        # ? 1: return self.digitReadPort()>>machine.Pin.pin&number
    def digitWrite(self, pin: machine.Pin.pin, value: Any) -> None: ...
    def deinit(self) -> None: ...
