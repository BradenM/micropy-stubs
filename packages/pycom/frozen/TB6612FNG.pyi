# make_stub_files: Mon 02 Sep 2019 at 04:45:23

from typing import Any, Dict, Optional, Sequence, Tuple, Union
Node = Any
    def id(cls: Any) -> Any: ...
        #   0: return temp
        # ? 0: return temp
    def __init__(self, pin_1: Any, pin_2: Any, pwm_pin: Any) -> None: ...
    def clockwise(self) -> None: ...
    def anticlockwise(self) -> None: ...
    def short_break(self) -> None: ...
    def freewheel(self) -> None: ...
    def duty_cycle(self, *args, **kwargs) -> Any: ...
        #   0: return self.pwm.duty_cycle(*args,None=kwargs)
        # ? 0: return self.pwm.duty_cycle(*args, None=kwargs)
class TB6612FNG(object):
    def __init__(self, a_1: Any, a_2: Any, a_pwm: Any, b_1: Any, b_2: Any, b_pwm: Any, standby_pin: Any) -> None: ...
    def standby(self, *args) -> Any: ...
        #   0: return self._standby.value(*args)
        # ? 0: return self._standby.value(*args)
